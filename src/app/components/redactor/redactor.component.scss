@use "../../../assets/styles/variables" as *;
@use "../../../assets/styles/mixin" as *;

.redactor {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: $opacityBgc;
    padding-top: toRem(100);
    @media(max-width: toEm($mobile)){
            padding-top: 0;
           }
    // @include adaptiveValue(padding-top, 100, 30);
    display: none;
    overflow-y: scroll;
    &.open{
        display: block;
    }
    // .redactor__wrapper

    &__wrapper {
        position: relative;
        background-color: $backGround;
        max-width: toRem(1200);
        margin: 0 auto;
        padding-top: toRem(40);
        padding-bottom: toRem(30);
        @include adaptiveValue(padding-left, 30, 15);
        @include adaptiveValue(padding-right, 30, 15);
        // border-radius: toRem(15);
    }

    // .redactor__content

    &__content {
    }

    // .redactor__action

    &__action {
    }

    &__close{
        position: absolute;
        top: toRem(10);
        right: toRem(10);
        button{
            svg{
                width: toRem(25);
                height: toRem(25);
                rotate: 45deg;
            }
        }
    }
}
.form {
    // .form__title

    &__title{
        width: 100%;
        font-size: toRem(25);
        font-weight: 600;
        padding: toRem(10) toRem(5);
        background-color: inherit;
        text-wrap: wrap;
        &::placeholder{
            font-size: toRem(25);
            font-weight: normal;
        }
        &:not(:last-child){
        margin-bottom: toRem(12);
        }
        &:focus-visible{
            outline: none;
          }
    }

    &__controls{
        margin-bottom: toRem(15);
       button{
        padding: toRem(3);
        fill: $praimery;
        height: toRem(26);
        &.active{
            fill: $backGround;
            background-color: $praimery;
        }
    }
       
    }

    // .form__wrapper

    &__wrapper,
    &__add-block {
        &:not(:last-child){
            margin-bottom: toRem(20);
            }
    }

    &__block{
        &:not(:last-child){
            margin-bottom: toRem(15);
        }
    }

    // .form__action

    &__action{
        text-align: center;
    }

    &__task{
        width: 100%;
        font-size: toRem(20);
        line-height: 1.5;
        overflow: hidden;
        resize: none;
        height: auto;
        // background-color: rgba(70, 70, 89, 0.05);
        background-color: inherit;
        padding: toRem(5) toRem(10);;
        &:focus-visible{
            outline: none;
        }
        
       
    }
}


.block{
    display: flex;
    align-items: center;
    gap: toRem(10);
   
    div{
        width: 100%;
        font-size: toRem(20);
        line-height: 1.2;
    }
    label{
        width: toRem(20);
        height: toRem(20);
        border: 2px solid $praimery;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        &::after{
            content: "";
            width: toRem(10);
            height: toRem(10);
            background-color: $praimery;
            border-radius: 50%;
            opacity: 0;
            transition: 0.3s ease;
            cursor: pointer;
        }
        @media(any-hover: hover){
                &:hover{
                border-color: $primeryHover;
                &::after{
                    background-color: $primeryHover;
                }
               }
               }
    }
    input{
        visibility: hidden;
        position: absolute;
        &:checked + label{
            &::after{
                opacity: 1;
            }
        }
    }
}
.icon{
    width: toRem(20);
    height: toRem(20);
}
